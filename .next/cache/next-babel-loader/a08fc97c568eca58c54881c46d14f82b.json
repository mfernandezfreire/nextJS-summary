{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/  Disco Externo/DEVS/Udemy/React/Colt Steele/Exercises/nextJS/pages/post.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2,\n      columnNumber: 10\n    }\n  }, \"You are looking at post \", id);\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            return _context.abrupt(\"return\", query);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // Also we can do it with withRouter that way ; )\n// import { withRouter } from \"next/router\";\n// const Post = withRouter((props) => (\n//   <h1>You are looking at post {props.id}</h1>\n// ));\n// export default withRouter(Post);\n\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Volumes/  Disco Externo/DEVS/Udemy/React/Colt Steele/Exercises/nextJS/pages/post.js"],"names":["Post","id","getInitialProps","query"],"mappings":";;;;;;;;;AAAA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;AACvB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6BA,EAA7B,CAAP;AACD,CAFD;;KAAMD,I;;AAINA,IAAI,CAACE,eAAL;AAAA,uEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,KAAT,SAASA,KAAT;AAAA,6CACdA,KADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,I,CAIA;AACA;AAEA;AACA;AACA;AAEA;;;AAEA,eAAeH,IAAf","sourcesContent":["const Post = ({ id }) => {\n  return <h1>You are looking at post {id}</h1>;\n};\n\nPost.getInitialProps = async ({ query }) => {\n  return query;\n};\n\n// Also we can do it with withRouter that way ; )\n// import { withRouter } from \"next/router\";\n\n// const Post = withRouter((props) => (\n//   <h1>You are looking at post {props.id}</h1>\n// ));\n\n// export default withRouter(Post);\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}