{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Volumes/  Disco Externo/DEVS/Udemy/React/Colt Steele/Exercises/nextJS/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../components/Navbar\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      Navbar = _ref.Navbar,\n      pageProps = _ref.pageProps;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  })));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Volumes/  Disco Externo/DEVS/Udemy/React/Colt Steele/Exercises/nextJS/pages/_app.js"],"names":["Navbar","MyApp","Component","pageProps"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;AACA,SAASC,KAAT,OAAiD;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBF,MAAqB,QAArBA,MAAqB;AAAA,MAAbG,SAAa,QAAbA,SAAa;AAC/C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAlBSF,K;AAoBT,eAAeA,KAAf","sourcesContent":["import Navbar from \"../components/Navbar\";\nfunction MyApp({ Component, Navbar, pageProps }) {\n  return (\n    <div>\n      <Component {...pageProps} />\n    </div>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}